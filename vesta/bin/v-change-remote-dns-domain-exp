#!/bin/bash
# info: change remote dns domain expiriation date
# options: USER DOMAIN
#
# The function synchronize dns domain with the remote server.


#----------------------------------------------------------#
#                    Variable&Function                     #
#----------------------------------------------------------#

# Argument defenition
user=$1
domain=$2

# Includes
source $VESTA/func/main.sh
source $VESTA/func/remote.sh
source $VESTA/conf/vesta.conf


#----------------------------------------------------------#
#                    Verifications                         #
#----------------------------------------------------------#

check_args '2' "$#" 'USER DOMAIN'
validate_format 'user' 'domain'
is_system_enabled "$DNS_CLUSTER" 'DNS_CLUSTER'
is_object_valid 'user' 'USER' "$user"
is_object_valid 'dns' 'DOMAIN' "$domain"

if [ ! -e "$VESTA/conf/dns-cluster.conf" ]; then
    echo "Error: dns-cluster.conf doesn't exist"
    log_event "$E_NOTEXIST $EVENT"
    exit $E_NOTEXIST
fi

number_of_proc=$(ps auxf | grep -v grep | grep $VESTA/bin/$SCRIPT | wc -l)
if [ "$number_of_proc" -gt 2 ]; then
    echo "Error: another sync process already exists"
    log_event "$E_EXISTS $EVENT"
    exit $E_EXISTS
fi


#----------------------------------------------------------#
#                       Action                             #
#----------------------------------------------------------#

old_ifs="$IFS"
IFS=$'\n'

# Check remote dns nodes
remote_dns_health_check

for cluster_str in $(grep "SUSPENDED='no'" $VESTA/conf/dns-cluster.conf); do

    # Get host values
    eval $cluster_str

    # Check connection type
    if [ -z "TYPE" ]; then
        TYPE='api'
    fi

    # Switch on connection type
    case $TYPE in
        ssh) send_cmd="send_ssh_cmd" ;;
        *)  send_cmd="send_api_cmd" ;;
    esac

    # Check recipient dns user
    if [ -z "$DNS_USER" ]; then
        DNS_USER='dns-cluster'
    fi

    # Check dns exceptions
    if [ -z "$DNS_CLUSTER_IGNORE" ]; then
        DNS_CLUSTER_IGNORE='dns-cluster'
    fi

    # Sync domain
    str=$(grep "DOMAIN='$domain'" $USER_DATA/dns.conf)
    eval $str
    $send_cmd v-insert-dns-domain $DNS_USER "$str" $HOSTNAME 'scheduled'
    if [ $? -ne 0 ]; then
        echo "Error: $TYPE connection to $HOST failed"
        log_event "$E_CONNECT $EVENT"
        exit $E_CONNECT
    fi

done

# Update pipe
pipe="$VESTA/data/queue/dns-cluster.pipe"
str=$(grep -n "$SCRIPT $1 $2 $3$" $pipe | cut -f1 -d: | head -n1)
if [ ! -z "$str" ]; then
    sed -i "$str d"  $pipe
fi


#----------------------------------------------------------#
#                       Vesta                              #
#----------------------------------------------------------#

exit
